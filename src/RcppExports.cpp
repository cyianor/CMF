// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// p_gradUsparse
void p_gradUsparse(NumericMatrix Xm, NumericMatrix Gm, NumericMatrix CUm, NumericMatrix OUm, NumericMatrix Cm, int idx, double tau, NumericVector Rowm, NumericVector Colm);
RcppExport SEXP _CMF_p_gradUsparse(SEXP XmSEXP, SEXP GmSEXP, SEXP CUmSEXP, SEXP OUmSEXP, SEXP CmSEXP, SEXP idxSEXP, SEXP tauSEXP, SEXP RowmSEXP, SEXP ColmSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xm(XmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Gm(GmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type CUm(CUmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type OUm(OUmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Cm(CmSEXP);
    Rcpp::traits::input_parameter< int >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Rowm(RowmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Colm(ColmSEXP);
    p_gradUsparse(Xm, Gm, CUm, OUm, Cm, idx, tau, Rowm, Colm);
    return R_NilValue;
END_RCPP
}
// p_updatePseudoData
void p_updatePseudoData(NumericMatrix Xm, NumericMatrix U1m, NumericMatrix U2m, NumericVector Rv, NumericVector Cv);
RcppExport SEXP _CMF_p_updatePseudoData(SEXP XmSEXP, SEXP U1mSEXP, SEXP U2mSEXP, SEXP RvSEXP, SEXP CvSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xm(XmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U1m(U1mSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U2m(U2mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Rv(RvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Cv(CvSEXP);
    p_updatePseudoData(Xm, U1m, U2m, Rv, Cv);
    return R_NilValue;
END_RCPP
}
// p_updateTau
double p_updateTau(NumericMatrix Xm, NumericMatrix U1m, NumericMatrix U2m, NumericMatrix cov1m, NumericMatrix cov2m, NumericVector Rv, NumericVector Cv, NumericVector nu1v, NumericVector nu2v);
RcppExport SEXP _CMF_p_updateTau(SEXP XmSEXP, SEXP U1mSEXP, SEXP U2mSEXP, SEXP cov1mSEXP, SEXP cov2mSEXP, SEXP RvSEXP, SEXP CvSEXP, SEXP nu1vSEXP, SEXP nu2vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xm(XmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U1m(U1mSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U2m(U2mSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cov1m(cov1mSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cov2m(cov2mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Rv(RvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Cv(CvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu1v(nu1vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu2v(nu2vSEXP);
    rcpp_result_gen = Rcpp::wrap(p_updateTau(Xm, U1m, U2m, cov1m, cov2m, Rv, Cv, nu1v, nu2v));
    return rcpp_result_gen;
END_RCPP
}
// p_updateMean
List p_updateMean(NumericMatrix Xm, NumericMatrix U1m, NumericMatrix U2m, int idx, NumericVector Mv);
RcppExport SEXP _CMF_p_updateMean(SEXP XmSEXP, SEXP U1mSEXP, SEXP U2mSEXP, SEXP idxSEXP, SEXP MvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xm(XmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U1m(U1mSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type U2m(U2mSEXP);
    Rcpp::traits::input_parameter< int >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Mv(MvSEXP);
    rcpp_result_gen = Rcpp::wrap(p_updateMean(Xm, U1m, U2m, idx, Mv));
    return rcpp_result_gen;
END_RCPP
}
// p_covUsparse
void p_covUsparse(NumericMatrix Xm, NumericMatrix Cm, NumericMatrix OUm, NumericMatrix OCm, int idx, double tau);
RcppExport SEXP _CMF_p_covUsparse(SEXP XmSEXP, SEXP CmSEXP, SEXP OUmSEXP, SEXP OCmSEXP, SEXP idxSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xm(XmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Cm(CmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type OUm(OUmSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type OCm(OCmSEXP);
    Rcpp::traits::input_parameter< int >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    p_covUsparse(Xm, Cm, OUm, OCm, idx, tau);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CMF_p_gradUsparse", (DL_FUNC) &_CMF_p_gradUsparse, 9},
    {"_CMF_p_updatePseudoData", (DL_FUNC) &_CMF_p_updatePseudoData, 5},
    {"_CMF_p_updateTau", (DL_FUNC) &_CMF_p_updateTau, 9},
    {"_CMF_p_updateMean", (DL_FUNC) &_CMF_p_updateMean, 5},
    {"_CMF_p_covUsparse", (DL_FUNC) &_CMF_p_covUsparse, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_CMF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
